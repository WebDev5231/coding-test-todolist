@{
    ViewBag.Title = "Página Principal - Coding Todolist";
    var userId = Session["UserId"];
    var userName = Session["Username"];
}

<!DOCTYPE html>
<html lang="pt-BR">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title</title>
    <link rel="stylesheet" href="~/Content/bootstrap.min.css">
</head>

<body>
    <div class="container mt-5">
        <h2 class="text-center mb-4">Bem-vindo, @userName!</h2>
        <div class="card">
            <div class="card-header d-flex justify-content-between align-items-center">
                <h5 class="mb-0">Minhas Tarefas</h5>
                <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addTaskModal">Nova Tarefa</button>
            </div>
            <div class="card-body">
                <ul class="list-group" id="taskList">
                    <!-- As tarefas serão carregadas dinamicamente -->
                </ul>
            </div>
        </div>
    </div>

    <!-- Modal para adicionar tarefa -->
    <div class="modal fade" id="addTaskModal" tabindex="-1" aria-labelledby="addTaskLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="addTaskLabel">Nova Tarefa</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="taskTitle" class="form-label">Título</label>
                        <input type="text" id="taskTitle" class="form-control">
                    </div>
                    <div class="mb-3">
                        <label for="taskDescription" class="form-label">Descrição</label>
                        <textarea id="taskDescription" class="form-control"></textarea>
                    </div>
                    <div class="mb-3">
                        <label for="taskDate" class="form-label">Data de Término</label>
                        <input type="date" id="taskDate" class="form-control">
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                    <button type="button" class="btn btn-primary" onclick="addTask()">Salvar</button>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js" type="text/javascript"></script>
    <script type="text/javascript">
        document.addEventListener("DOMContentLoaded", () => {
            const cacheKey = "tasksCache";
            const cachedTasks = localStorage.getItem(cacheKey);

            if (cachedTasks) {
                renderTasks(JSON.parse(cachedTasks));
            } else {
                axios.get("https://localhost:7112/ListarTodasTarefas")
                    .then(response => {
                        localStorage.setItem(cacheKey, JSON.stringify(response.data));
                        renderTasks(response.data);
                    })
                    .catch(error => console.error("Erro ao buscar tarefas:", error));
            }
        });

        function renderTasks(tasks) {
            const taskList = document.getElementById("taskList");
            taskList.innerHTML = "";

            tasks.forEach(task => {
                // Formatando a data de término
                const formattedDate = new Date(task.dataTermino).toLocaleDateString('pt-BR', { year: 'numeric', month: '2-digit', day: '2-digit' });

                let listItem = document.createElement("li");
                listItem.className = "list-group-item d-flex justify-content-between align-items-center";
                listItem.innerHTML = `
                            <div>
                                <h6 class="mb-1">${task.titulo}</h6>
                                <small>${task.descricao}</small>
                                <p class="mb-0"><strong>Data de Término: </strong>${formattedDate}</p>
                            </div>
                            <button class="btn btn-danger btn-sm" onclick="removeTask(this)">Remover</button>
                        `;
                taskList.appendChild(listItem);
            });
        }

        function addTask() {
            let title = document.getElementById("taskTitle").value;
            let description = document.getElementById("taskDescription").value;
            let date = document.getElementById("taskDate").value;

            if (title && description && date) {
                let listItem = document.createElement("li");
                listItem.className = "list-group-item d-flex justify-content-between align-items-center";
                listItem.innerHTML = `
                            <div>
                                <h6 class="mb-1">${title}</h6>
                                <small>${description}</small>
                                <p class="mb-0"><strong>Data de Término: </strong>${date}</p>
                            </div>
                            <button class="btn btn-danger btn-sm" onclick="removeTask(this)">Remover</button>
                        `;
                document.getElementById("taskList").appendChild(listItem);
                document.getElementById("taskTitle").value = "";
                document.getElementById("taskDescription").value = "";
                document.getElementById("taskDate").value = "";
                var modal = bootstrap.Modal.getInstance(document.getElementById('addTaskModal'));
                modal.hide();
            }
        }

        function removeTask(element) {
            element.parentElement.remove();
        }
    </script>
</body>
</html>
